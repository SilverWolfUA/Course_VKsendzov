1) Посмотреть где я	=>
		pwd
2) Создать папку =>
		mkdir project
		
		(-p — она позволяет создать все недостающие директории в иерархии.)
3) Зайти в папку =>
		cd project
4) Создать 3 папки =>
		mkdir folder_1 folder_2 folder_3
5) Зайти в любоую папку =>
		cd folder3
6) Создать 5 файлов (3 txt, 2 json) =>
		touch file1.txt file2.txt file3.txt one.json two.json
7) Создать 3 папки =>
		mkdir folder_A folder_B folder_C
8) Вывести список содержимого папки =>
		ls -l
		
		(-a - отображать все файлы, включая скрытые;
		 -c - сортировать файлы по времени модификации или создания;
		 -d - выводить только директории, без их содержимого;
		 -h - выводить размеры папок в удобном для чтения формате;
		 -l - выводить подробный список;
		 -r - обратный порядок сортировки;
		 -S - сортировать по размеру, сначала большие;
		 -t - сортировка по времени изменения файла/директории
		 -X - сортировать по алфавиту) 
9) + Открыть любой txt файл =>
		vim file2.txt
10) + написать туда что-нибудь, любой текст. =>
		нажать i, набрать текст "Hello!"
11) + сохранить и выйти. =>
		нажать Esc, потом :wq
12) Выйти из папки на уровень выше =>
		cd ..
—
13) переместить любые 2 файла, которые вы создали, в любую другую папку. =>  
		mv -i *.json /project/folder_3/folder_C

		(-b - Создать резервную копию существующих файлов;
		 -i - При перезаписи существующих файлов спрашивать разрешение пользователя на подтверждение операции;
		 -f, - перезаписывать существующие файлы;
		 -v - Выводить информацию о каждом файле, который обрабатывает команда mv;
		 * - все файлы в директории) 
		
14) скопировать любые 2 файла, которые вы создали, в любую другую папку. =>
		cp -v file1.txt file2.txt /project/folder_2
		
		(-r - копировать папку Linux рекурсивно;
		 -f, - перезаписывать существующие файлы;)
15) Найти файл по имени =>
		find -iname "file1.txt"
16) просмотреть содержимое в реальном времени.
	Команда grep изучите как она работает. =>
		tail -f -n3 ./1.log

		grep -ir "hello" 
		
		(-c - подсчитать количество вхождений шаблона;
		 -i - не учитывать регистр;
		 -e - использовать регулярные выражения при поиске;
		 -n - показывать номер строки в файле;
		 -r - для включения рекурсивного поиска;
		 -v — обратный поиск, выводит только строки, в которых нет указанного поискового запроса;
		 --color - выделение цветом)
17) вывести несколько первых строк из текстового файла =>
		head -n2 file1.txt
18) вывести несколько последних строк из текстового файла =>
		tail -n3 file1.txt
				
		( -f — позволяет выводить новые данные в файле в реальном времени.)
19) просмотреть содержимое длинного файла (команда less) изучите как она работает. =>
		less -s file1.txt
		(-s — заменить множество идущих подряд пустых
			строк одной пустой строкой;
		 -N - вывести номера строк;
		 +F - мониторинг файла журнала в реальном времени.)
20) вывести дату и время =>
		date
		date +"%A %d %B %Y %T %Z" 
=========

Задание *
1) Отправить http запрос на сервер.
https://api.quarantine.country/api/v1/regions =>
		GET:
		curl https://api.quarantine.country/api/v1/regions
		POST:
		curl -X POST https://api.quarantine.country/api/v1/regions
		
		(-X – метод HTTP, который будет использоваться;
		 -v - можно увидеть, какие именно команды curl отсылает серверу;
		 -i - увидеть заголовки ответа вместе с самим документом;
		 -I - увидеть только заголовки ответаж
		 -d - данные, которые должны быть отправлены;
		 -H - дополнительный заголовок для отправки;
		 -o - выводить контент страницы в файл;
		 -O - сохранять контент в файл с именем страницы или файла на сервере;)
2) Написать скрипт который выполнит автоматически пункты 3, 4, 5, 6, 7, 8, 13